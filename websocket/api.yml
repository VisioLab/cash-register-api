asyncapi: 2.4.0
info:
  title: VisioLab Cash Register API
  version: 0.1.0
  description: >
    ### Enables communication between the VisioLab food scanner and a cash register

    The iPad running the VisioLab scanner runs a Websocket server in the local
    network on `ws:/<local-ip>/visiolab-cash-register`.


    Once the cash register has established a connection, it should synchronize
    its articles using the `syncItems` operation. Afterwards
    the scanner is ready to detect food.


    Once something is detected, `setBasket` will be send, followed by 
    `startPayment`. The cash register should handle the transaction and 
    "respond" by sending either `paymentSuccess` or `paymentFailure`.


    Each message contains an `event` and a `data` property at the top level. The `event`
    property identifies the type of the message, so that actions can be dispatched
    based on it. The `data` property contains the actual content of the message.
servers:
  visiolab:
    url: "ws://localhost/visiolab-cash-register"
    protocol: ws
defaultContentType: application/json
channels:
  /visiolab-cash-register:
    publish:
      summary: Messages the client can send.
      operationId: sendMessage
      message:
        oneOf:
          - $ref: "#/components/messages/syncItems"
          - $ref: "#/components/messages/paymentResult"
    subscribe:
      summary: Messages the sever can send.
      operationId: processMessage
      message:
        oneOf:
          - $ref: "#/components/messages/setBasket"
          - $ref: "#/components/messages/startPayment"

components:
  schemas:
    Item:
      type: object
      required:
        - name
        - priceLookup
        - price
      properties:
        id:
          type: string
          description: Identifier for the item.
        name:
          type: string
          description: Name of the item.
        priceLookup:
          type: string
          description: The price lookup code for the item.
        price:
          type: number
          description: The default price for the item. Is disregarded for price calculation if priceLookup is present.
        previewImage:
          type: string
    Items:
      type: array
      items:
        type: object
        $ref: "#/components/schemas/Item"
    SuccessfulPayment:
      type: object
      properties:
        status:
          type: string
          const: success
        cashRegisterId:
          type: string
        receiptId:
          type: string
        totalGross:
          type: number
          description: The amount that was payed for the transaction.
        totalVat:
          type: number
          description: The amount of taxes that was payed for the transaction.
        receiptQrCode:
          type: string
          description: QR Code for pointing to the digital receipt for the transaction.
      required:
        - totalGross
    FailedPayment:
      type: object
      properties:
        status:
          enum:
            - cancelled
            - cardRemovedTooQuickly
            - notEnoughBalance
            - other
          type: string
          description: Reason for the payment failure.
        message:
          type: string
          description: Message for the customer on how to proceed with the payment.
      required:
        - reason
        - message
  messages:
    syncItems:
      summary: Synchronize available items in the cash register.
      payload:
        type: object
        properties:
          event:
            type: string
            const: syncItems
          data:
            type: object
            properties:
              items:
                $ref: "#/components/schemas/Items"
          required:
            - event
            - data
      examples:
        - payload:
            event: syncItems
            data:
              items:
                - id: "a"
                  name: "Eggs Benedict"
                  priceLookup: "1"
                  price: 1.00
                - id: "b"
                  name: "Waldorf Salad"
                  priceLookup: "2"
                  price: 2.00
                - id: "c"
                  name: "Caesar Salad"
                  priceLookup: "3"
                  price: 3.00
    setBasket:
      summary: Set the current basket.
      description: The contents of the basket are completely replaced by the new contents.
      payload:
        type: object
        properties:
          event:
            type: string
            const: setBasket
          data:
            type: object
            properties:
              items:
                $ref: "#/components/schemas/Items"
      examples:
        - payload:
            event: setBasket
            data:
              checkoutId: string
              items:
                - id: "abc"
                  name: "Caesar Salad"
                  price_lookup: "123"
                  price: 1.20
                - id: "def"
                  name: "Beef Stroganoff"
                  price_lookup: "456"
                  price: 2.40
    startPayment:
      summary: Initiate the payment for the current basket.
      payload:
        type: object
        properties:
          event:
            type: string
            const: startPayment
          data:
            type: object
            properties:
              paymentMethod:
                type: string
            required:
              - paymentMethod
      examples:
        - payload:
            event: startPayment
            data:
              paymentMethod: "CreditCard"
    paymentResult:
      summary: Report the success of a payment.
      payload:
        type: object
        properties:
          event:
            type: string
            const: paymentResult
          data:
            oneOf:
              - $ref: "#/components/schemas/SuccessfulPayment"
              - $ref: "#/components/schemas/FailedPayment"
      examples:
        - payload:
            event: paymentResult
            data:
              status: "success"
              totalGross: 5.20
        - payload:
            event: paymentResult
            data:
              status: "cancelled"
              message: "Please tap your card again."
    reset:
      summary: Reset the cash register.
      description: >
        Cancel all ongoing transactions and delete all 
        items from the current basket.
      payload:
        type: object
        properties:
          event:
            type: string
            const: reset
